# File: .github/workflows/deploy-dev.yml
name: Deploy to Dev

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t my-app:${{ github.sha }} .
          docker tag my-app:${{ github.sha }} kasramahsouli/hamidi-client:dev
          docker push kasramahsouli/hamidi-client:dev

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Add SSH Key to Agent
      - name: Add SSH Key
        run: |
          eval "$(ssh-agent -s)"  # Start the ssh-agent
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -  # Add the private key

      # Step 2: Create the .ssh directory
      - name: Create .ssh directory
        run: |
          mkdir -p ~/.ssh  # Create the .ssh directory if it doesn't exist
          chmod 700 ~/.ssh  # Set correct permissions

      # Step 3: Add VPS to known_hosts to prevent host key verification failure
      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -H 82.165.239.219 >> ~/.ssh/known_hosts  # Fetch the host key and add it to known_hosts
          chmod 644 ~/.ssh/known_hosts  # Set the correct permissions for known_hosts

      # Step 4: Test SSH Connection (optional, can be removed after confirming it's working)
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no root@82.165.239.219 'echo "SSH connection successful"'

      # Step 5: SSH into VPS and deploy using Docker commands
      - name: SSH to VPS and Deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: "82.165.239.219"
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull kasramahsouli/hamidi-client:dev
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 8080:5173 --name my-app kasramahsouli/hamidi-client:dev
